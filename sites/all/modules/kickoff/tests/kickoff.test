<?php
module_load_include('inc', 'kickoff', 'kickoff');
/**
 * @file
 * Tests for the Kickoff Night Group Generator module.
 */
class KickoffTests extends DrupalWebTestCase {
	
	public function setUp()
	{
		parent::setUp(array('kickoff'));
		$GLOBALS['MAX_GROUP_SIZE'] = 3;
	}
	
	/**
	 * Metadata about our test case.
	 */
	public static function getInfo()
	{
	  return array(
		'name' => 'Kickoff',
		'description' => 'Tests for the Kickoff module.',
		'group' => 'Kickoff Group',
	  );
	}
	
	public function testEmpty()
	{
		$noGroups = kickoff(1, array());
		$this->assertEqual(count($noGroups), 0);
	}
	
	public function testNoSeniors()
	{
		$people = array(
			array("name" => "Bill", "trio" => 4, "title"=>"mentor", "nights" => [1=>true], "prefs" => ["year" => 1, "hobbies" => ["sports","art"]])
			,array("name" => "Eric", "trio" => 1, "title"=>"junior", "nights" => [1=>true], "prefs" => ["year" => 3, "hobbies" => ["sports","music"]])
			,array("name" => "Ted", "trio" => 3, "title"=>"senior", "nights" => [1=>true], "prefs" => ["year" => 2, "hobbies" => ["fishing","cooking"]])
			,array("name" => "Alvin", "trio" => 2, "title"=>"mentor", "nights" => [1=>true], "prefs" => ["year" => 6, "hobbies" => ["sports","art"]])
			);
			
		$groups = kickoff(2, $people);
		
		$this->assertTrue($groups[0]->getMentors()[0]['name'] === 'Alvin');
		$this->assertTrue($groups[0]->getMentors()[1]['name'] === 'Bill');
		$this->assertTrue($groups[0]->getJuniors()[0]['name'] === 'Eric');
	}
	
	public function testTrioDisperse()
	{
		$people = array(
			array("name" => "Bill", "trio" => 1, "title"=>"mentor", "nights" => [1=>true], "prefs" => ["year" => 1, "hobbies" => ["sports","art"]])
			,array("name" => "Eric", "trio" => 3, "title"=>"junior", "nights" => [1=>true], "prefs" => ["year" => 3, "hobbies" => ["sports","music"]])
			,array("name" => "Ted", "trio" => 2, "title"=>"senior", "nights" => [1=>true], "prefs" => ["year" => 2, "hobbies" => ["fishing","cooking"]])
			,array("name" => "Alvin", "trio" => 1, "title"=>"mentor", "nights" => [1=>true], "prefs" => ["year" => 6, "hobbies" => ["sports","art"]])
			);
			
		$groups = kickoff(2, $people);
		
		$this->assertTrue($groups[0]->getMentors()[0]['name'] === 'Alvin');
		$this->assertTrue($groups[0]->getSeniors()[0]['name'] === 'Ted');
		$this->assertTrue($groups[0]->getJuniors()[0]['name'] === 'Eric');
	}
	
	public function testYearDisperse()
	{
		$people = array(
			array("name" => "Bill", "trio" => 1, "title"=>"mentor", "nights" => [1=>true], "prefs" => ["year" => 1, "hobbies" => ["sports","art"]])
			,array("name" => "Nick", "trio" => 2, "title"=>"mentor", "nights" => [1=>true], "prefs" => ["year" => 2, "hobbies" => ["sports","art"]])
			,array("name" => "Daniel", "trio" => 3, "title"=>"mentor", "nights" => [1=>true], "prefs" => ["year" => 4, "hobbies" => ["sports","art"]])
			,array("name" => "Eric", "trio" => 4, "title"=>"mentor", "nights" => [1=>true], "prefs" => ["year" => 1, "hobbies" => ["sports","art"]])
			,array("name" => "Ted", "trio" => 5, "title"=>"mentor", "nights" => [1=>true], "prefs" => ["year" => 2, "hobbies" => ["sports","art"]])
			,array("name" => "Alvin", "trio" => 6, "title"=>"mentor", "nights" => [1=>true], "prefs" => ["year" => 5, "hobbies" => ["sports","art"]])
			);
			
		$groups = kickoff(2, $people);
		
		$this->assertTrue($groups[0]->getMentors()[0]['name'] === 'Alvin');
		$this->assertTrue($groups[0]->getMentors()[1]['name'] === 'Daniel');
		$this->assertTrue($groups[0]->getMentors()[2]['name'] === 'Nick');
		
		$this->assertTrue($groups[1]->getMentors()[0]['name'] === 'Ted');
		$this->assertTrue($groups[1]->getMentors()[1]['name'] === 'Bill');
		$this->assertTrue($groups[1]->getMentors()[2]['name'] === 'Eric');
	}
	
	public function testHobbyDisperse()
	{
		$people = array(
			array("name" => "Bill", "trio" => 1, "title"=>"mentor", "nights" => [1=>true], "prefs" => ["year" => 1, "hobbies" => ["sports","art"]])
			,array("name" => "Nick", "trio" => 2, "title"=>"mentor", "nights" => [1=>true], "prefs" => ["year" => 1, "hobbies" => ["sports","art"]])
			,array("name" => "Daniel", "trio" => 3, "title"=>"mentor", "nights" => [1=>true], "prefs" => ["year" => 1, "hobbies" => ["sport","arts"]])
			,array("name" => "Eric", "trio" => 4, "title"=>"mentor", "nights" => [1=>true], "prefs" => ["year" => 1, "hobbies" => ["sport","arts"]])
			,array("name" => "Ted", "trio" => 5, "title"=>"mentor", "nights" => [1=>true], "prefs" => ["year" => 1, "hobbies" => ["sporty","cart"]])
			,array("name" => "Alvin", "trio" => 6, "title"=>"mentor", "nights" => [1=>true], "prefs" => ["year" => 1, "hobbies" => ["sporty","cart"]])
			);
			
		$groups = kickoff(2, $people);
		
		$this->assertTrue($groups[0]->getMentors()[0]['name'] === 'Bill');
		$this->assertTrue($groups[0]->getMentors()[1]['name'] === 'Daniel');
		$this->assertTrue($groups[0]->getMentors()[2]['name'] === 'Ted');
		
		$this->assertTrue($groups[1]->getMentors()[0]['name'] === 'Nick');
		$this->assertTrue($groups[1]->getMentors()[1]['name'] === 'Eric');
		$this->assertTrue($groups[1]->getMentors()[2]['name'] === 'Alvin');
	}


}