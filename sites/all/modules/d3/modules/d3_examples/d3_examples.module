<?php
/**
 * @file
 * D3 Example module file.
 */

module_load_include('inc', 'yearmanager', 'db');
include 'ChromePhp.php';

function get_website_root() {
    // TODO: MODIFY THIS IF SITE ROOT IS NOT "/"
    return "/";
    //return "/maestro_main/";
    //return "/TESTING/";
}

/**
 * Implements hook_menu().
 */
function d3_examples_menu()
{
    $items['examples'] = array(
        'title' => 'Visualization',
        'description' => 'Different visualization examples using d3.',
        'page callback' => 'd3_examples_linegraph',
        'access arguments' => array(
            'access visualizer'
        ) ,
    );
    $items['examples/line'] = array(
        'title' => 'Trio Matcher',
        'description' => 'Uses d3 module to create a sample line graph',
        'access arguments' => array(
            'access visualizer'
        ) ,
        'page callback' => 'd3_examples_linegraph',
        'type' => MENU_DEFAULT_LOCAL_TASK,
    );
    if (module_exists('graphapi')) {
        $items['examples/forcedirected'] = array(
            'title' => 'Force directed graph',
            'description' => 'Uses d3 module to create a sample force directed graph',
            'access arguments' => array(
                'access visualizer'
            ) ,
            'page callback' => 'd3_examples_forcedirected',
            'type' => MENU_LOCAL_TASK,
        );
    }
    /*$items['examples/column'] = array(
    'title' => 'Column chart',
    'description' => 'Uses d3 module to create a sample column chart',
    'access callback' => TRUE,
    'page callback' => 'd3_examples_column',
    'type' => MENU_LOCAL_TASK,
    );
    $items['examples/bar'] = array(
    'title' => 'Bar chart',
    'description' => 'Uses d3 module to create a sample bar chart',
    'access callback' => TRUE,
    'page callback' => 'd3_examples_bar',
    'type' => MENU_LOCAL_TASK,
    );
    $items['examples/pie'] = array(
    'title' => 'Pie chart',
    'description' => 'Uses d3 module to create a sample pie chart.',
    'access callback' => TRUE,
    'page callback' => 'd3_examples_pie',
    'type' => MENU_LOCAL_TASK,
    );*/
    $items['examples/bubbles'] = array(
        'title' => 'Add People',
        'description' => 'bubbles visualization',
        'access arguments' => array(
            'access visualizer'
        ) ,
        'page callback' => 'd3_examples_bubbles',
        'access callback' => MENU_LOCAL_TASK,
    );
    $items['examples/mentor'] = array( // trying to make another page... but think we are just going to change existing.
        'title' => 'Trios',
        'description' => 'mentor adding',
        'access arguments' => array(
            'access visualizer'
        ) ,
        'page callback' => 'd3_examples_mentor',
        'access callback' => MENU_LOCAL_TASK,
    );
    $items['examples/group'] = array( // trying to make another page... but think we are just going to change existing.
        'title' => 'Kickoff Groups',
        'description' => 'group adding',
        'access arguments' => array(
            'access visualizer'
        ) ,
        'page callback' => 'd3_examples_group',
        'access callback' => MENU_LOCAL_TASK,
    );
    return $items;
}
function d3_examples_permission()
{
    return array(
        'access visualizer' => array(
            'title' => t('Access Visualizer') ,
            'description' => t('Allow users to access the Visualizer.') ,
            'restrict acces' => TRUE,
        ) ,
    );
}
$boolean = 0;
// this function is going to delete the entries...
function deleteKickoff($id1)
{
    // remove the kickoff group from the db...
    //$delete_query = "DELETE FROM TESTING.maestro_matched_kickoff_groups WHERE id = " . $id1; // this should delete the query here...
    //$result = db_query($delete_query)->fetchAll;
    $result = db_delete('maestro_matched_kickoff_groups')
        ->condition('id', $id1, '=')
        ->execute();
    //Chromephp::log($delete_query);
    Chromephp::log($result);
}
function d3_examples_group()
{
    // delete anything with weightings and percentage...
    // Chromephp::log("inside the group right now ");
    // we need to know which form was submitted...
    if (isset($_GET['delete'])) {
        Chromephp::log("the delete button has been pressed..!! ");
        deleteKickoff($id1); // this is going to delete the kickoff group given the id...
        printJSFunction();
        echo '<script type="text/javascript">alert("We have Deleted this matching");</script>';
        echo '<script type="text/javascript">', 'jsfunction();', '</script>';
        return;
    }
    // if one of them is not null
    if (isset($_GET["timestamp1"])) {
        $add_timestamp1 = $_GET["timestamp1"];
        $add_mentoring_year1 = $_GET["mentoring_year1"];
        $add_night = $_GET["kickoff_night"]; // have kickoff nights instead of weightings...
        $id1 = $_GET["id1"];
        // Chromephp::log(" button was pressed");
        //$query1 = "SELECT * FROM TESTING.maestro_matched_kickoff_groups";
        //$result1 = db_query($query1)->fetchAll();
        $result1 = db_select('maestro_matched_kickoff_groups', 'mmkg')
            ->fields('mmkg')
            ->execute()
            ->fetchAll();
        Chromephp::log($result1);
        for ($g = 0; $g < count($result1); $g++) {
            //  Chromephp::log("inside the second loop");
            // Chromephp::log($result1[$g]->id);
            // Chromephp::log($result1[$g]);
            // Chromephp::log("just before the if statement");
            if ($result1[$g]->id == $id1) {
                //   Chromephp::log($add_night);  // this is going to be the different night...
                // lets grab the trio string
                //  Chromephp::log("inside the if right now");
                $most_recent_trio = $result1[$g]->groups;
                $manage = json_decode($most_recent_trio);
                $array = array(
                    'name' => '',
                    'children' => $manage
                );
                $mentor_list = array(); // holds all mentors that we are adding.
                $final_array = array(
                    'name' => '',
                    'type' => 'kickoff' . $add_night,
                    'children' => array()
                );
                for ($a = 0; $a < count($array[children]); $a++) {
                    $group = $array[children][$a];
                    for ($e = 0; $e < count($group); $e++) {
                        $mentor_index = $group->mentor; // this is going to be a list of mentor index's
                        $senior_index = $group->senior; // this is also a list of senior index's ...
                        $junior_index = $group->junior;
                        // Chromephp::log("just before printing the index");
                        // Chromephp::log($mentor_index);
                        //  Chromephp::log(count($mentor_index));
                        $mentor_json = array(); // holds all information from each applicant
                        $junior_json = array(); // this holds all mentor list for the current group...
                        $senior_json = array(); // this holds all mentor list for the current group...

                        $current_year = getYear();
                        list($mentor_table, $student_table) = getParticipantTableNames($current_year);
                        for ($i = 0; $i < count($mentor_index); $i++) {
                            // Chromephp::log("inside the for loop");
                            //$mentor_query = "SELECT * FROM TESTING.maestro_signup_mentor_20142015 WHERE id =" . $mentor_index[$i];
                            //$list = db_query($mentor_query)->fetchAll();
                            $list = db_select($mentor_table, 'mt')
                                ->fields('mt')
                                ->condition('id', $mentor_index[$i], '=')
                                ->execute()
                                ->fetchAll();
                            array_push($mentor_json, $list);
                        }
                        for ($i = 0; $i < count($senior_index); $i++) {
                            //$senior_query = "SELECT * FROM TESTING.maestro_signup_student_20142015 WHERE id =" . $senior_index[$i];
                            //$list1 = db_query($senior_query)->fetchAll();
                            $list1 = db_select($student_table, 'st')
                                ->fields('st')
                                ->condition('id', $senior_index[$i], '=')
                                ->execute()
                                ->fetchAll();
                            array_push($senior_json, $list1);
                        }
                        for ($i = 0; $i < count($junior_index); $i++) {
                            // make the query..
                            //$junior_query = "SELECT * FROM TESTING.maestro_signup_student_20142015 WHERE id =" . $junior_index[$i];
                            //$list2 = db_query($junior_query)->fetchAll();
                            $list2 = db_select($student_table, 'st')
                                ->fields('st')
                                ->condition('id', $junior_index[$i], '=')
                                ->execute()
                                ->fetchAll();
                            array_push($junior_json, $list2);
                        }
                        /*for ($i = 0; $i < count($junior_index); $i++){
                        // Chromephp::log("zxcv");
                        // Chromephp::log($junior_json[$i]);
                        //  Chromephp::log($junior_json[$i][0]->first_name);
                        }*/
                        $all_mentor_stuff = array();
                        for ($i = 0; $i < count($mentor_json); $i++) {
                            // go through every object...
                            $mentor_first_name = $mentor_json[$i][0]->first_name;
                            $mentor_last_name = $mentor_json[$i][0]->last_name;
                            $mentor_email = $mentor_json[$i][0]->email;
                            $mentor_gender = $mentor_json[$i][0]->gender;
                            $mentor_phone = $mentor_json[$i][0]->phone;
                            $mentor_birth = $mentor_json[$i][0]->birth_year;
                            // this is one entry...
                            $group_array_mentor = array(
                                'position' => 'Mentor',
                                'name' => $mentor_first_name,
                                'familyname' => $mentor_last_name,
                                'Email' => $mentor_email,
                                'phone' => $mentor_phone,
                                'phonealt' => 'NA',
                                'gender' => $mentor_gender,
                                'birth year' => $mentor_birth,
                                'preferences' => 'NA',
                                'colour' => 'blue',
                                'size' => 500
                            );
                            array_push($all_mentor_stuff, $group_array_mentor);
                        }
                        $all_senior_stuff = array();
                        for ($i = 0; $i < count($senior_json); $i++) {
                            // go through every object...
                            $senior_first_name = $senior_json[$i][0]->first_name;
                            $senior_last_name = $senior_json[$i][0]->last_name;
                            $senior_email = $senior_json[$i][0]->email;
                            $senior_gender = $senior_json[$i][0]->gender;
                            $senior_phone = $senior_json[$i][0]->phone;
                            $senior_birth = $senior_json[$i][0]->birth_year;
                            // this is one entry...
                            $group_array_senior = array(
                                'position' => 'Senior',
                                'name' => $senior_first_name,
                                'familyname' => $senior_last_name,
                                'Email' => $senior_email,
                                'phone' => $senior_phone,
                                'phonealt' => 'NA',
                                'gender' => $senior_gender,
                                'birth year' => $senior_birth,
                                'preferences' => 'NA',
                                'colour' => 'blue',
                                'size' => 500
                            );
                            array_push($all_senior_stuff, $group_array_senior);
                        }
                        $all_junior_stuff = array();
                        for ($i = 0; $i < count($junior_json); $i++) {
                            // go through every object...
                            $junior_first_name = $junior_json[$i][0]->first_name;
                            $junior_last_name = $junior_json[$i][0]->last_name;
                            $junior_email = $junior_json[$i][0]->email;
                            $junior_gender = $junior_json[$i][0]->gender;
                            $junior_phone = $junior_json[$i][0]->phone;
                            $junior_birth = $junior_json[$i][0]->birth_year;
                            // Chromephp::log("thius is the first name");
                            // Chromephp::log($junior_first_name);
                            // this is one entry...
                            $group_array_junior = array(
                                'position' => 'Junior',
                                'name' => $junior_first_name,
                                'familyname' => $junior_last_name,
                                'Email' => $junior_email,
                                'phone' => $junior_phone,
                                'phonealt' => 'NA',
                                'gender' => $junior_gender,
                                'birth year' => $junior_birth,
                                'preferences' => 'NA',
                                'colour' => 'blue',
                                'size' => 500
                            );
                            array_push($all_junior_stuff, $group_array_junior);
                        }
                        $daResult = array_merge($all_junior_stuff, $all_senior_stuff);
                        $daResult1 = array_merge($daResult, $all_mentor_stuff);
                        $the_children_group = array();
                        // lets create the group now...
                        $group_array_start = array(
                            'name' => 'Group' . $a,
                            'children' => $daResult1
                        );
                        array_push($final_array[children], $group_array_start);
                    }
                }
                //  Chromephp::log("changing the json file before rendering the page...");
                $encodedJson = json_encode($final_array);
                $file = 'TESTING.json';
                file_put_contents($file, $encodedJson);
                printJSFunction();
                echo '<script type="text/javascript">alert("Switching to another visualization will delete changes");</script>';
                echo '<script type="text/javascript">', 'jsfunction();', '</script>';
                // now we need to close the window..
            }
        }
    }
    //$query = "SELECT * FROM TESTING.maestro_matched_kickoff_groups";
    //$result = db_query($query)->fetchAll();
    $result = db_select('maestro_matched_kickoff_groups', 'mmkg')
        ->fields('mmkg')
        ->execute()
        ->fetchAll();
    echo "<table style='width:90%'>";
    echo "<tr>";
    echo "<th>Timestamp</th>";
    echo "<th>Mentoring Year</th> ";
    echo "<th>Kickoff Night</th>";
    echo "</tr>";
    for ($i = 0; $i < count($result); $i++) {
        // gather all info...
        $timestamp1 = $result[$i]->timestamp; // this is going to be the timestamp
        $mentoring_year1 = $result[$i]->mentoring_year;
        $kickoff_night = $result[$i]->kickoff_night;
        $id = $result[$i]->id;
        // populate the table...
        echo "<tr>"; //
        echo "<td>" . $timestamp1 . "</td>"; // this should show the first name
        echo "<td>" . $mentoring_year1 . "</td> ";
        echo "<td>" . $kickoff_night . "</td>";
        // lets send something inside here...
        echo "<td>";
        echo "<form action='".get_website_root()."' method='get'>";
        echo "<input type='hidden' name='q' value='examples/group' />";
        echo "<input type='hidden' name='timestamp1' value='$timestamp1' />";
        echo "<input type='hidden' name='mentoring_year1' value='$mentoring_year1' />";
        echo "<input type='hidden' name='kickoff_night' value='$kickoff_night' />";
        echo "<input type='hidden' name='id1' value='$id' />";
        echo "<input type='submit' value='Choose' onSubmit='window.close()'></button> ";
        echo "<input type='submit' name = 'delete' value='Delete' onSubmit='window.close()'></button> "; // this is the newly added delete button...
        echo "</form> ";
        echo "</td";
        echo "</tr>";
    }
    echo "</table>";
}
function CheckifAdded($firstname, $lastname)
{
    // Chromephp::log("checking if it has been added before actaully adding it");
    $jsonString = file_get_contents('TESTING.json');
    $data = json_decode($jsonString);
    for ($g = 0; $g < count($data->children); $g++) {
        $object = $data->children[$g];
        for ($a = 0; $a < count($object->children); $a++) {
            $object2 = $object->children[$a];
            $currentfirst = $object2->name;
            $currentlast = $object2->familyname;
            if ($currentfirst == $firstname && $currentlast == $lastname) {
                //    Chromephp::log("cant add part is running");
                return true; // returns true if he has been added.
            }
        }
    }
    return false;
}
// this is going to display all the trios to the user so that he/she can decide which year to look at and alter...
// add this to the trio function...
function deleteTrio($id1)
{ // this deletes from the trio...
    //$delete_query = "DELETE FROM TESTING.maestro_matched_trios WHERE id = " . $id1; // this should delete the query here...
    //$result = db_query($delete_query)->fetchAll();
    $result = db_delete('maestro_matched_trios')
        ->condition('id', $id1, '=')
        ->execute()
        ->fetchAll();
    Chromephp::log($delete_query);
    Chromephp::log($result);
}
function d3_examples_mentor()
{
    // check whether it has been deleted...
    // we need to know which form was submitted...
    if (isset($_GET['delete'])) {
        Chromephp::log("the delete button has been pressed..!! ");
        deleteTrio($id);
        printJSFunction();
        echo '<script type="text/javascript">alert("We have Deleted this matching");</script>';
        echo '<script type="text/javascript">', 'jsfunction();', '</script>';
        return;
    }
    if (isset($_GET["timestamp"])) {
        $add_timestamp = $_GET["timestamp"];
        $add_mentoring_year = $_GET["mentoring_year"];
        $add_weightings = $_GET["weightings"];
        $add_percentage = $_GET["percentage"];
        $id = $_GET["id"];
        // then the button was pressed and we need to change the json file to that of the year chosen...
        // TODO!! change the json file first... we need to place the weighting into the json file...
        // Chromephp::log(" button was pressed");
        Chromephp::log($add_weightings); // this is going to give the weightings.
        // write this to the json file.
        $file = "weightings.json";
        file_put_contents($file, $add_weightings); // place the new weightiings into file ...
        //$query1 = "SELECT * FROM TESTING.maestro_matched_trios";
        //$result1 = db_query($query1)->fetchAll();
        $result1 = db_select('maestro_matched_trios', 'mmt')
            ->fields('mmt')
            ->execute()
            ->fetchAll();
        for ($g = 0; $g < count($result1); $g++) {
            // Chromephp::log($result1[$g]->id);
            if ($result1[$g]->id == $id) {
                // then we recreate the json file using this one...
                // lets grab the trio string
                $most_recent_trio = $result1[$g]->trios;
                $manage = json_decode($most_recent_trio);
                $array = array(
                    'name' => '',
                    'children' => $manage
                );
                // Chromephp::log($array);
                // Chromephp::log($array['children']);
                $mentor_list = array(); // holds all mentors that we are adding.
                $final_array = array(
                    'name' => '',
                    'type' => 'trio',
                    'children' => array()
                );
                for ($a = 0; $a < count($array['children']); $a++) {
                    $group = $array['children'][$a];
                    for ($e = 0; $e < count($group); $e++) {
                        // the index's for the database
                        $mentor_index = $group->mentor;
                        $senior_index = $group->senior;
                        $junior_index = $group->junior;
                        // pushes all the index's that are going to be displayed.
                        // still need to take care of when something gets added and deleted.
                        //array_push($mentee_index_list, $senior_index);
                        //array_push($mentee_index_list, $junior_index);
                        //array_push($mentor_index_list, $mentor_index);
                        // now that we have the mentor index we need tograb all his information and paste it into the json file...

                        $current_year = getYear();
                        list($mentor_table, $student_table) = getParticipantTableNames($current_year);

                        // mentor query
                        //$mentor_query = "SELECT * FROM TESTING.maestro_signup_mentor_20142015 WHERE id =" . $mentor_index;
                        // Chromephp:: log($mentor_query);
                        //$list = db_query($mentor_query)->fetchAll();
                        $list = db_select($mentor_table, 'mt')
                            ->fields('mt')
                            ->condition('id', $mentor_index, '=')
                            ->execute()
                            ->fetchAll();
                        // Chromephp::log($list);
                        // Chromephp::log($list[0]->first_name);
                        // grab all the attributes of a particular mentor and add to array.
                        $mentor_first_name = $list[0]->first_name;
                        $mentor_last_name = $list[0]->last_name;
                        $mentor_email = $list[0]->email;
                        $mentor_gender = $list[0]->gender;
                        $mentor_phone = $list[0]->phone;
                        $mentor_birth = $list[0]->birth_year;
                        // junior student query...
                        //$junior_query = "SELECT * FROM TESTING.maestro_signup_student_20142015 WHERE id =" . $junior_index;
                        //$list2 = db_query($junior_query)->fetchAll();
                        $list2 = db_select($student_table, 'st')
                            ->fields('st')
                            ->condition('id', $junior_index, '=')
                            ->execute()
                            ->fetchAll();
                        // Chromephp::log($list2[0]->first_name);
                        $junior_first_name = $list2[0]->first_name;
                        $junior_last_name = $list2[0]->last_name;
                        $junior_email = $list2[0]->email;
                        $junior_gender = $list2[0]->gender;
                        $junior_phone = $list2[0]->phone;
                        $junior_birth = $list2[0]->birth_year;
                        // senior student query...
                        //$senior_query = "SELECT * FROM TESTING.maestro_signup_student_20142015 WHERE id =" . $senior_index;
                        //$list3 = db_query($senior_query)->fetchAll();
                        $list3 = db_select($student_table, 'st')
                            ->fields('st')
                            ->condition('id', $senior_index, '=')
                            ->execute()
                            ->fetchAll();
                        // Chromephp::log($list2[0]->first_name);
                        $senior_first_name = $list3[0]->first_name;
                        $senior_last_name = $list3[0]->last_name;
                        $senior_email = $list3[0]->email;
                        $senior_gender = $list3[0]->gender;
                        $senior_phone = $list3[0]->phone;
                        $senior_birth = $list3[0]->birth_year;
                        // mentor instance...
                        $group_array_mentor = array(
                            'position' => 'Mentor',
                            'name' => $mentor_first_name,
                            'familyname' => $mentor_last_name,
                            'Email' => $mentor_email,
                            'phone' => $mentor_phone,
                            'phonealt' => 'NA',
                            'gender' => $mentor_gender,
                            'birth year' => $mentor_birth,
                            'preferences' => 'NA',
                            'colour' => 'blue',
                            'size' => 500
                        );
                        // junior student instance...
                        $group_array_junior = array(
                            'position' => 'Junior', // for now it should be Mentee... change later..
                            'name' => $junior_first_name,
                            'familyname' => $junior_last_name,
                            'Email' => $junior_email,
                            'phone' => $junior_phone,
                            'phonealt' => 'NA',
                            'gender' => $junior_gender,
                            'birth year' => $junior_birth,
                            'preferences' => 'NA',
                            'colour' => 'blue',
                            'size' => 500
                        );
                        // senior student instance
                        $group_array_senior = array(
                            'position' => 'Senior', // going to have to chagne this late ...
                            'name' => $senior_first_name,
                            'familyname' => $senior_last_name,
                            'Email' => $senior_email,
                            'phone' => $senior_phone,
                            'phonealt' => 'NA',
                            'gender' => $senior_gender,
                            'birth year' => $senior_birth,
                            'preferences' => 'NA',
                            'colour' => 'blue',
                            'size' => 500
                        );
                        // add this to children...
                        $group_array_start = array(
                            'name' => 'Group' . $a,
                            'children' => array(
                                $group_array_mentor,
                                $group_array_senior,
                                $group_array_junior
                            )
                        );
                        array_push($final_array['children'], $group_array_start);
                    }
                }
                // Chromephp::log("changing the json file before rendering the page...");
                $encodedJson = json_encode($final_array);
                $file = 'TESTING.json';
                file_put_contents($file, $encodedJson);
                printJSFunction();
                echo '<script type="text/javascript">alert("Switching to another visualization will delete changes");</script>';
                echo '<script type="text/javascript">', 'jsfunction();', '</script>';
                // now we need to close the window..
            }
        }
    }
    //$query = "SELECT * FROM TESTING.maestro_matched_trios";
    //$result = db_query($query)->fetchAll();
    $result = db_select('maestro_matched_trios', 'mmt')
        ->fields('mmt')
        ->execute()
        ->fetchAll();
    echo "<table style='width:90%'>";
    echo "<tr>";
    echo "<th>Timestamp</th>";
    echo "<th>Mentoring Year</th> ";
    echo "<th>weightings</th>"; // birth might not be that important...
    echo "<th>Percentage</th>";
    echo "</tr>";
    for ($i = 0; $i < count($result); $i++) {
        // gather all info...
        $timestamp = $result[$i]->timestamp; // this is going to be the timestamp
        $mentoring_year = $result[$i]->mentoring_year;
        $weightings = $result[$i]->weightings;
        $percentage = $result[$i]->percentage;
        $id = $result[$i]->id;
        // populate the table...
        echo "<tr>"; //
        echo "<td>" . $timestamp . "</td>"; // this should show the first name
        echo "<td>" . $mentoring_year . "</td> ";
        echo "<td>" . $weightings . "</td>";
        echo "<td>" . $percentage . "</td>";
        // lets send something inside here...
        echo "<td>";
        echo "<form action='".get_website_root()."' method='get'>";
        echo "<input type='hidden' name='q' value='examples/mentor' />";
        echo "<input type='hidden' name='timestamp' value='$timestamp' />";
        echo "<input type='hidden' name='mentoring_year' value='$mentoring_year' />";
        echo "<input type='hidden' name='weightings' value='$weightings' />";
        echo "<input type='hidden' name='percentage' value='$percentage' />";
        echo "<input type='hidden' name='id' value='$id' />";
        echo "<input type='submit' value='Choose' onSubmit='window.close()'></button> ";
        echo "<input type='submit' name = 'delete' value='Delete' onSubmit='window.close()'></button> ";
        echo "</form> ";
        echo "</td";
        echo "</tr>";
    }
    echo "</table>";
}
// this makes the mentor list...
function make_mentor_list()
{
    // Chromephp::log("making mentor list is running");
    //$query = "SELECT * FROM TESTING.maestro_signup_mentor_20142015";
    //$result = db_query($query)->fetchAll();
    $current_year = getYear();
    list($mentor_table, $student_table) = getParticipantTableNames($current_year);
    $result = db_select($mentor_table, 'mt')
        ->fields('mt')
        ->execute()
        ->fetchAll();
    echo "<table style='width:90%'>";
    // set up the headers...
    echo "<tr>";
    echo "<th>Firstname</th>";
    echo "<th>Lastname</th> ";
    echo "<th>Experience</th>"; // birth might not be that important...
    echo "<th>Gender</th>";
    echo "<th>Company</th>";
    echo "</tr>";
    // loop through every single instance...
    for ($i = 0; $i < count($result); $i++) {
        // all variables displayed...
        $firstName = $result[$i]->first_name;
        $lastName = $result[$i]->last_name;
        $birth = $result[$i]->birth_year;
        $gender = $result[$i]->gender;
        $year = $result[$i]->year;
        $email = $result[$i]->email;
        $phone = $result[$i]->phone;
        $id = $result[$i]->id;
        $experience_years = $result[$i]->experience_years;
        $company = $result[$i]->current_employer;
        // now lets make every single row here...
        echo "<tr>"; //
        echo "<td>" . $firstName . "</td>"; // this should show the first name
        echo "<td>" . $lastName . "</td> ";
        echo "<td>" . $experience_years . "</td>";
        echo "<td>" . $gender . "</td>";
        echo "<td>" . $company . "</td>";
        echo "<td>";
        echo "<form action='".get_website_root()."examples/bubbles#overlay-context=' method='get'>";
        echo "<input type='hidden' name='maddid' value=$id />";
        echo "<input type='hidden' name='maddlname' value=$lastName />";
        echo "<input type='hidden' name='maddfname' value=$firstName />";
        echo "<input type='hidden' name='maddbirth' value=$birth />";
        echo "<input type='hidden' name='maddgender' value=$gender />";
        echo "<input type='hidden' name='maddyear' value=$year />";
        echo "<input type='hidden' name='maddemail' value=$email />";
        echo "<input type='hidden' name='maddphone' value=$phone />";
        echo "<input type='hidden' name='maddexperience' value=$experience_years />";
        echo "<input type='hidden' name='maddcompany' value=$company />";
        echo "<input type='submit' value='Submit' onSubmit='window.close()'></button> ";
        echo "</form> ";
        echo "</td";
        echo "</tr>";
    }
    echo "</table>";
}
function make_mentee_list()
{
    // Chromephp::log("making mentee list is running");
    // just showing students for now... need to later make a function for mentor databse...
    //$query = "SELECT * FROM TESTING.maestro_signup_student_20142015";
    //$result = db_query($query)->fetchAll();
    $current_year = getYear();
    list($mentor_table, $student_table) = getParticipantTableNames($current_year);
    $result = db_select($student_table, 'st')
        ->fields('st')
        ->execute()
        ->fetchAll();
    // the table
    echo "<table style='width:90%'>";
    // set up the headers...
    echo "<tr>";
    echo "<th>Firstname</th>";
    echo "<th>Lastname</th> ";
    echo "<th>birth</th>";
    echo "<th>gender</th>";
    echo "<th>year</th>";
    echo "</tr>";
    // loop through everything...
    for ($i = 0; $i < count($result); $i++) {
        // all variables displayed...
        $firstName = $result[$i]->first_name;
        $lastName = $result[$i]->last_name;
        $birth = $result[$i]->birth_year;
        $gender = $result[$i]->gender;
        $year = $result[$i]->year;
        $email = $result[$i]->email;
        $phone = $result[$i]->phone;
        $id = $result[$i]->id;
        echo "<tr>"; //
        echo "<td>" . $firstName . "</td>"; // this should show the first name
        echo "<td>" . $lastName . "</td> ";
        echo "<td>" . $birth . "</td>";
        echo "<td>" . $gender . "</td>";
        echo "<td>" . $year . "</td>";
        echo "<td>";
        echo "<form action='".get_website_root()."examples/bubbles#overlay-context=' method='get'>";
        echo "<input type='hidden' name='addid' value=$id />";
        echo "<input type='hidden' name='addlname' value=$lastName />";
        echo "<input type='hidden' name='addfname' value=$firstName />";
        echo "<input type='hidden' name='addbirth' value=$birth />";
        echo "<input type='hidden' name='addgender' value=$gender />";
        echo "<input type='hidden' name='addyear' value=$year />";
        echo "<input type='hidden' name='addemail' value=$email />";
        echo "<input type='hidden' name='addphone' value=$phone />";
        echo "<input type='submit' value='Submit' onSubmit='window.close()'></button> ";
        echo "</form> ";
        echo "</td";
        echo "</tr>";
    }
    echo "</table>";
}
function add_button_pressed_mentee()
{
    $add_first_name = $_GET["addfname"]; // we need to send this through the submit button
    $add_last_name = $_GET["addlname"]; // we need to send this through the submit button...
    $add_email = $_GET["addemail"]; // this isnt sending through right now...
    $add_gender = $_GET["addgender"];
    $add_birth = $_GET["addbirth"];
    $add_year = $_GET["addyear"];
    $add_id = $_GET["addid"];
    // this runs if the add button is pressed...
    if (!is_null($add_first_name) || !is_null($add_last_name) || !is_null($add_email) || !is_null($add_year) || !is_null($add_birth) || !is_null($add_gender)) {
        // check if its been added before
        $beenadded = CheckifAdded($add_first_name, $add_last_name);
        //   Chromephp::log($beenadded);
        if ($beenadded == true) {
            // then we dont add this and instead we send alert...
            echo '<script language="javascript">';
            echo 'alert("This person has already been added")';
            echo '</script>';
            //   Chromephp::log("inside the true");
        }
        else {
            $jsonString = file_get_contents('TESTING.json');
            $data = json_decode($jsonString);
            $group_number = count($data->children); // this gets the number of the children...
            // check if senior of junior student
            if ($add_year > 2) {
                $add_person_array = array(
                    'position' => 'Senior',
                    'name' => $add_first_name,
                    'familyname' => $add_last_name,
                    'Email' => $add_email,
                    'phone' => $add_phone,
                    'phonealt' => 'NA',
                    'gender' => $add_gender,
                    'birth year' => $add_birth,
                    'preferences' => 'NA',
                    'colour' => 'blue',
                    'size' => 500
                );
            }
            else {
                $add_person_array = array(
                    'position' => 'Junior',
                    'name' => $add_first_name,
                    'familyname' => $add_last_name,
                    'Email' => $add_email,
                    'phone' => $add_phone,
                    'phonealt' => 'NA',
                    'gender' => $add_gender,
                    'birth year' => $add_birth,
                    'preferences' => 'NA',
                    'colour' => 'blue',
                    'size' => 500
                );
            }
            array_push($mentee_index_list, $add_id);
            $group_array_start = array(
                'name' => 'Group' . $group_number,
                'children' => array(
                    $add_person_array
                )
            );
            $new_array = array_push($data->children, $group_array_start);
            $encodedJson = json_encode($data);
            $file = 'TESTING.json';
            file_put_contents($file, $encodedJson);
            printJSFunction();
            echo '<script type="text/javascript">', 'jsfunction();', '</script>';
        }
    }
}
function add_button_pressed_mentor()
{
    $add_first_name = $_GET["maddfname"]; // we need to send this through the submit button
    $add_last_name = $_GET["maddlname"]; // we need to send this through the submit button...
    $add_email = $_GET["maddemail"]; // this isnt sending through right now...
    $add_gender = $_GET["maddgender"];
    $add_birth = $_GET["maddbirth"];
    $add_year = $_GET["maddyear"];
    $add_id = $_GET["maddid"];
    $add_experience = $_GET["maddexperience"];
    $add_company = $_GET["maddcompany"];
    // this runs if the add button is pressed...
    if (!is_null($add_first_name) || !is_null($add_last_name) || !is_null($add_email) || !is_null($add_year) || !is_null($add_birth) || !is_null($add_gender)) {
        // check if its been added before
        $beenadded = CheckifAdded($add_first_name, $add_last_name);
        //  Chromephp::log($beenadded);
        if ($beenadded == true) {
            // then we dont add this and instead we send alert...
            echo '<script language="javascript">';
            echo 'alert("This person has already been added")';
            echo '</script>';
            // Chromephp::log("inside the true");
        }
        else {
            $jsonString = file_get_contents('TESTING.json');
            $data = json_decode($jsonString);
            $group_number = count($data->children); // this gets the number of the children...
            $add_person_array = array(
                'position' => 'Mentor',
                'name' => $add_first_name,
                'familyname' => $add_last_name,
                'Email' => $add_email,
                'phone' => $add_phone,
                'phonealt' => 'NA',
                'gender' => $add_gender,
                'birth year' => $add_birth,
                'preferences' => 'NA',
                'colour' => 'blue',
                'size' => 500
            );
            // array_push($mentee_index_list, $add_id);
            $group_array_start = array(
                'name' => 'Group' . $group_number,
                'children' => array(
                    $add_person_array
                )
            );
            $new_array = array_push($data->children, $group_array_start);
            $encodedJson = json_encode($data);
            $file = 'TESTING.json';
            file_put_contents($file, $encodedJson);
            printJSFunction();
            echo '<script type="text/javascript">', 'jsfunction();', '</script>';
        }
    }
}
// change the name of this function...
function d3_examples_bubbles()
{
    // Chromephp::log("bubbles is running");
    $search_first_name = $_GET["fname"]; // this should be the first name
    $search_last_name = $_GET["lname"]; // this should be the second name.
    // might have to use something other then the GET function...
    add_button_pressed_mentee();
    add_button_pressed_mentor();
    $show_mentee_list = $_GET["mentee"]; // check these values and see which one the user wants to see...
    $show_mentor_list = $_GET["mentor"]; //
    echo "<form action='".get_website_root()."examples/bubbles#overlay-context=' method='get'>";
    echo "First name: <input type='text' name='fname'><br />";
    echo "Last name: <input type='text' name='lname'><br />";
    echo "<input type='submit' value='Search'>"; // this is going to be the search button...
    echo "</form>";
    echo "<form action='".get_website_root()."examples/bubbles#overlay-context=' method='get'>";
    echo "<input type='hidden' name='mentee' value='true' />";
    echo "<input type='hidden' name='mentor' value='false' />";
    echo "<input name='Mentee List' type='submit' value='View all Mentees'>Mentee List</button> "; // the mentee button..
    echo "</form>";
    echo "<form action='".get_website_root()."examples/bubbles#overlay-context=' method='get'>";
    echo "<input type='hidden' name='mentee' value='false' />";
    echo "<input type='hidden' name='mentor' value='true' />";
    echo "<input name='Mentor List' type='submit' value='View all Mentors'>Mentor List</button> "; // the mentor button
    echo "</form>";
    // Chromephp::log($show_mentee_list);
    // Chromephp::log("before checking if anything inputted into text bar");
    if (is_null($search_first_name) || is_null($search_last_name)) {
        if ($show_mentee_list == 'true') {
            //   Chromephp::log("making mentee list");
            //  Chromephp::log($show_mentee_list);
            make_mentee_list(); // make the mentee list
        }
        if ($show_mentor_list == 'true') {
            // Chromephp::log("making mentor list");
            // Chromephp::log($show_mentor_list);
            make_mentor_list(); // makes the mentor list...
        }
    }
    else {
        // the search bar...!!!
        searchBar($search_first_name, $search_last_name);
    }
}
// this gets called when the search bar is pressed...
function searchBar($firstname, $lastname)
{
    $current_year = getYear();
    list($mentor_table, $student_table) = getParticipantTableNames($current_year);
    // Chromephp::log("running searrch bvar");
    //$theqry = "SELECT * FROM TESTING.maestro_signup_student_20142015"; //WHERE first_name = '.$firstname.' OR last_name = '.$lastname;
    // Chromephp::log($theqry);
    //$result = db_query($theqry)->fetchAll();
    $result = db_select($student_table, 'st')
        ->fields('st')
        ->execute()
        ->fetchAll();
    // just fetch everything and go through inside php...
    //$theqry2 = "SELECT * FROM TESTING.maestro_signup_mentor_20142015"; // WHERE first_name = ".$firstname." OR last_name = ".$lastname;
    // Chromephp::log($theqry2);
    //$result2 = db_query($theqry2)->fetchAll();
    $result2 = db_select($mentor_table, 'mt')
        ->fields('mt')
        ->execute()
        ->fetchAll();
    // show the mentor list first...
    // Chromephp::log("the mentor names");
    echo "Mentor Search Results";
    echo "<table style='width:90%'>";
    echo "<tr>";
    echo "<th>Firstname</th>";
    echo "<th>Lastname</th> ";
    echo "<th>Experience</th>"; // birth might not be that important...
    echo "<th>Gender</th>";
    echo "<th>Company</th>";
    echo "</tr>";
    $run = 0;
    for ($i = 0; $i < count($result2); $i++) {
        // Chromephp::log($result2[$i]->first_name);
        // Chromephp::log($result2[$i]->last_name);
        // if we have a first name match then we show...
        $mentors_first_name = $result2[$i]->first_name;
        $mentors_last_name = $result2[$i]->last_name;
        // if either of the names match then lets show it...
        $birth = $result2[$i]->birth_year;
        $gender = $result2[$i]->gender;
        $year = $result2[$i]->year;
        $email = $result2[$i]->email;
        $phone = $result2[$i]->phone;
        $id = $result2[$i]->id;
        $experience_years = $result2[$i]->experience_years;
        $company = $result2[$i]->current_employer;
        // check if the names match...
        if ($mentors_first_name == $firstname || $mentors_last_name == $lastname) {
            $run = 1;
            echo "<tr>";
            echo "<td>" . $mentors_first_name . "</td>"; // this should show the first name
            echo "<td>" . $mentors_last_name . "</td> ";
            echo "<td>" . $experience . "</td>";
            echo "<td>" . $gender . "</td>";
            echo "<td>" . $company . "</td>";
            echo "<td>";
            echo "<form action='".get_website_root()."examples/bubbles#overlay-context=' method='get'>";
            echo "<input type='hidden' name='maddid' value=$id />";
            echo "<input type='hidden' name='maddlname' value=$mentors_last_name />";
            echo "<input type='hidden' name='maddfname' value=$mentors_first_name />";
            echo "<input type='hidden' name='maddbirth' value=$birth />";
            echo "<input type='hidden' name='maddgender' value=$gender />";
            echo "<input type='hidden' name='maddyear' value=$year />";
            echo "<input type='hidden' name='maddemail' value=$email />";
            echo "<input type='hidden' name='maddphone' value=$phone />";
            echo "<input type='hidden' name='maddexperience' value=$experience_years />";
            echo "<input type='hidden' name='maddcompany' value=$company />";
            echo "<input type='submit' value='Submit' onSubmit='window.close()'></button> ";
            echo "</form> ";
            echo "</td";
            echo "</tr>";
        }
    }
    if ($run == 0) {
        echo "<tr>";
        echo "<td>NO RESULTS for MENTORS</td>";
        echo "</tr>";
    }
    echo "</table>";
    echo "Mentee Search Results";
    echo "<table style='width:90%'>";
    echo "<tr>";
    echo "<th>Firstname</th>";
    echo "<th>Lastname</th> ";
    echo "<th>birth</th>";
    echo "<th>gender</th>";
    echo "<th>year</th>";
    echo "</tr>";
    $run1 = 0;
    for ($i = 0; $i < count($result); $i++) {
        $mentees_first_name = $result[$i]->first_name;
        $mentees_last_name = $result[$i]->last_name;
        $birth = $result[$i]->birth_year;
        $gender = $result[$i]->gender;
        $year = $result[$i]->year;
        $email = $result[$i]->email;
        $phone = $result[$i]->phone;
        $id = $result[$i]->id;
        // check if any of the names match
        if ($mentees_first_name == $firstname || $mentees_last_name == $lastname) {
            $run1 = 1;
            echo "<tr>";
            echo "<td>" . $mentees_first_name . "</td>"; // this should show the first name
            echo "<td>" . $mentees_last_name . "</td> ";
            echo "<td>" . $birth . "</td>";
            echo "<td>" . $gender . "</td>";
            echo "<td>" . $year . "</td>";
            echo "<td>";
            echo "<form action='".get_website_root()."examples/bubbles#overlay-context=' method='get'>";
            echo "<input type='hidden' name='addid' value=$id />";
            echo "<input type='hidden' name='addlname' value=$mentees_last_name />";
            echo "<input type='hidden' name='addfname' value=$mentees_first_name />";
            echo "<input type='hidden' name='addbirth' value=$birth />";
            echo "<input type='hidden' name='addgender' value=$gender />";
            echo "<input type='hidden' name='addyear' value=$year />";
            echo "<input type='hidden' name='addemail' value=$email />";
            echo "<input type='hidden' name='addphone' value=$phone />";
            echo "<input type='submit' value='Submit' onSubmit='window.close()'></button> ";
            echo "</form> ";
            echo "</td";
            echo "</tr>";
        }
    }
    if ($run1 == 0) {
        echo "<tr>";
        echo "<td>NO RESULTS for MENTEES</td>";
        echo "</tr>";
    }
    echo "</table>";
}
function createJson_mentors()
{
    $current_year = getYear();
    list($mentor_table, $student_table) = getParticipantTableNames($current_year);
    //$query2 = "SELECT * FROM TESTING.maestro_signup_mentor_20142015";
    //$result2 = db_query($query2)->fetchAll();
    $result2 = db_select($mentor_table, 'mt')
        ->fields('mt')
        ->execute()
        ->fetchAll();
    /*$weighting_content = file_get_contents("weightings.json");   // make a json file for timestamp
    Chromephp::log($weighting_content);  // printing the weighting content...
    $type_content = file_get_contents("TESTING.json");
    $jsondecode = json_decode($type_content);
    Chromephp::log($jsondecode->type);  // this is the decoded stuff
    $_timestamp = file_get_contents("timestamp.json");   // make a json file for timestamp
    Chromephp::log("this is the timestamp");
    Chromephp::log($_timestamp);  // */
    for ($r = 0; $r < count($result2); $r++) {
        // Chromephp::log("just before the queries");
        $theFirstName = $result2[$r]->first_name;
        $theLastName = $result2[$r]->last_name;
        $theEmployer = $result2[$r]->current_employer;
        $theEmail = $result2[$r]->email;
        $thePhone = $result2[$r]->phone;
        $cs_interests = $result2[$r]->cs_interests;
        $hobbies_interests = $result2[$r]->hobbies_interests;
        $birth_year = $result2[$r]->birth_year;
        // $year = $result2[$r]->year;
        $title = $result2[$r]->current_title;
        $highest_education = $result2[$r]->highest_education;
        $experience_years = $result2[$r]->experience_years;
        $comments = $result2[$r]->availability_comments;
        $file = 'json/' . $theFirstName . $theLastName . '.json'; // combine their names to make the file name.
        // ---> make the array here then encode it eventually...
        // not showing up because we dont have enough lines?
        // just finished writing to json file... lets take a look at TESTING.json and see what type it is...
        // for the weightings we have to grab
        // timestamp
        /*  $other_info_array1 = array(
        'index' => '14',
        'colour' => 'orange',
        'code' => 'Group Type: ' .$jsondecode->type  ,
        "error" => "none",
        "author" => "tomerfiliba@gmail.com"
        );
        $other_info_array2= array(
        'index' => '15',
        'colour' => 'orange',
        'code' => 'Weightings: ' .$weighting_content ,
        "error" => "none",
        "author" => "tomerfiliba@gmail.com"
        );
        $other_info_array3 = array(
        'index' => '16',
        'colour' => 'orange',
        'code' => 'Save Time: ' .$_timestamp,
        "error" => "none",
        "author" => "tomerfiliba@gmail.com"
        );*/
        $info_array1 = array( // show the first name first...
            'index' => '1',
            'colour' => 'orange',
            'code' => 'First Name: ' . $theFirstName,
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        // TODO!!  need to code up every single line in order to output onto the screen...
        // lets also specify the recipe...
        $info_array2 = array(
            'index' => '2',
            'colour' => 'orange',
            'code' => 'Last Name: ' . $theLastName, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $info_array3 = array(
            'index' => '3',
            'colour' => 'orange',
            'code' => 'Education: ' . $highest_education, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $info_array4 = array(
            'index' => '4',
            'colour' => 'orange',
            'code' => 'Email: ' . $theEmail, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $info_array5 = array(
            'index' => '5',
            'colour' => 'orange',
            'code' => 'Phone: ' . $thePhone, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $info_array6 = array(
            'index' => '6',
            'colour' => 'orange',
            'code' => 'Birth: ' . $birth_year, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $info_array8 = array(
            'index' => '8',
            'colour' => 'orange',
            'code' => 'CS Interests: ' . $cs_interests, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $info_array9 = array(
            'index' => '9',
            'colour' => 'orange',
            'code' => 'Hobbies: ' . $hobbies_interests, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $info_array10 = array(
            'index' => '10',
            'colour' => 'orange',
            'code' => 'Experience ' . $experience_years, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $info_array11 = array(
            'index' => '11',
            'colour' => 'orange',
            'code' => 'Current Employer ' . $theEmployer, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $info_array12 = array(
            'index' => '12',
            'colour' => 'orange',
            'code' => 'Current Title: ' . $title, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $info_array13 = array(
            'index' => '13',
            'colour' => 'orange',
            'code' => 'Availability Comments: ' . $comments,
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $starting_array = array(
            "path" => 'soomesort/asd/f/s',
            "lines" => array(
                $info_array1,
                $info_array2,
                $info_array3,
                $info_array4,
                $info_array5,
                $info_array6,
                $info_array8,
                $info_array9,
                $info_array10,
                $info_array11,
                $info_array12,
                $info_array13
                /* $other_info_array1,
                $other_info_array2,
                $other_info_array3*/
            )
        );
        $jsonEncoded = json_encode($starting_array);
        file_put_contents($file, $jsonEncoded);
    }
}
function createJson_students()
{
    $current_year = getYear();
    list($mentor_table, $student_table) = getParticipantTableNames($current_year);
    // this is going to creawte the json files for all the students...
    //$query2 = "SELECT * FROM TESTING.maestro_signup_student_20142015";
    //$result2 = db_query($query2)->fetchAll();
    $result2 = db_select($student_table, 'st')
        ->fields('st')
        ->execute()
        ->fetchAll();
    for ($r = 0; $r < count($result2); $r++) {
        $theFirstName = $result2[$r]->first_name;
        $theLastName = $result2[$r]->last_name;
        $theStudentNumber = $result2[$r]->student_number;
        $theEmail = $result2[$r]->email;
        $thePhone = $result2[$r]->phone;
        $cs_interests = $result2[$r]->cs_interests;
        $hobbies_interests = $result2[$r]->hobbies_interests;
        $birth_year = $result2[$r]->birth_year;
        $year = $result2[$r]->year;
        $file = 'json/' . $theFirstName . $theLastName . '.json'; // combine their names to make the file name.
        // Chromephp::log($file);
        // ---> make the array here then encode it eventually...
        // not showing up because we dont have enough lines?
        $info_array1 = array( // show the first name first...
            'index' => '1',
            'colour' => 'orange',
            'code' => 'First Name: ' . $theFirstName,
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        // TODO!!  need to code up every single line in order to output onto the screen...
        // lets also specify the recipe...
        $info_array2 = array(
            'index' => '2',
            'colour' => 'orange',
            'code' => 'Last Name: ' . $theLastName, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $info_array3 = array(
            'index' => '3',
            'colour' => 'orange',
            'code' => 'Student Number: ' . $theStudentNumber, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $info_array4 = array(
            'index' => '4',
            'colour' => 'orange',
            'code' => 'Email: ' . $theEmail, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $info_array5 = array(
            'index' => '5',
            'colour' => 'orange',
            'code' => 'Phone: ' . $thePhone, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $info_array6 = array(
            'index' => '6',
            'colour' => 'orange',
            'code' => 'Birth: ' . $birth_year, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $info_array7 = array(
            'index' => '7',
            'colour' => 'orange',
            'code' => 'Year Level: ' . $year, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $info_array8 = array(
            'index' => '8',
            'colour' => 'orange',
            'code' => 'CS Interests: ' . $cs_interests, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $info_array9 = array(
            'index' => '9',
            'colour' => 'orange',
            'code' => 'Hobbies: ' . $hobbies_interests, // this is going to be the last name
            "error" => "none",
            "author" => "tomerfiliba@gmail.com"
        );
        $starting_array = array(
            "path" => 'soomesort/asd/f/s',
            "lines" => array(
                $info_array1,
                $info_array2,
                $info_array3,
                $info_array4,
                $info_array5,
                $info_array6,
                $info_array7,
                $info_array8,
                $info_array9,
            )
        );
        $jsonEncoded = json_encode($starting_array);
        file_put_contents($file, $jsonEncoded);
    }
}
/**
 *  Use this function to create the custom bubbles... need to send in json file into this folder...
 */
$mentee_index_list;
$mentor_index_list;
function d3_examples_linegraph()
{
    //  Chromephp::log("the line graph function is running right now");
    createJson_students();
    createJson_mentors();
    $jsonString = file_get_contents('TESTING.json');
    $most_recent_weightings = '';  // declare this global..
    if ($jsonString == "null") {
        //$query = "SELECT * FROM TESTING.maestro_matched_trios";
        //$result = db_query($query)->fetchAll();
        $result = db_select('maestro_matched_trios', 'mmt')
            ->fields('mmt')
            ->execute()
            ->fetchAll();
        // Chromephp::log($result);
        $most_recent_trio = $result[count($result) - 1]->trios;
        // just send it to json file...
        $most_recent_weightings = $result[count($result) - 1]->weightings;
        $most_recent_timestamp = $result[count($result) - 1]->timestamp;
        // $encode_weightings = json_encode($most_recent_weightings);
        $file = "weightings.json"; // we have to keep updating this file...
        file_put_contents($file, $most_recent_weightings);
        // writes the json file...
        $file8 = "timestamp.json"; // we have to keep updating this file...
        file_put_contents($file8, $most_recent_timestamp);
        $manage = json_decode($most_recent_trio);
        $array = array(
            'name' => '',
            'type' => 'trio',
            'children' => $manage
        );
        // Chromephp::log($array);
        // Chromephp::log($array[children]);
        $mentor_list = array(); // holds all mentors that we are adding.
        $final_array = array(
            'name' => '',
            'type' => 'trio',
            'children' => array()
        );
        for ($a = 0; $a < count($array[children]); $a++) {
            $group = $array[children][$a];
            for ($e = 0; $e < count($group); $e++) {
                // the index's for the database
                $mentor_index = $group->mentor;
                $senior_index = $group->senior;
                $junior_index = $group->junior;
                // pushes all the index's that are going to be displayed.
                // still need to take care of when something gets added and deleted.
                //array_push($mentee_index_list, $senior_index);
                //array_push($mentee_index_list, $junior_index);
                //array_push($mentor_index_list, $mentor_index);
                // now that we have the mentor index we need tograb all his information and paste it into the json file...

                $current_year = getYear();
                list($mentor_table, $student_table) = getParticipantTableNames($current_year);

                // mentor query
                //$mentor_query = "SELECT * FROM TESTING.maestro_signup_mentor_20142015 WHERE id =" . $mentor_index;
                // Chromephp:: log($mentor_query);
                //$list = db_query($mentor_query)->fetchAll();
                $list = db_select($mentor_table, 'mt')
                    ->fields('mt')
                    ->condition('id', $mentor_index, '=')
                    ->execute()
                    ->fetchAll();
                // Chromephp::log($list);
                // Chromephp::log($list[0]->first_name);
                // grab all the attributes of a particular mentor and add to array.
                $mentor_first_name = $list[0]->first_name;
                $mentor_last_name = $list[0]->last_name;
                $mentor_email = $list[0]->email;
                $mentor_gender = $list[0]->gender;
                $mentor_phone = $list[0]->phone;
                $mentor_birth = $list[0]->birth_year;
                // junior student query...
                //$junior_query = "SELECT * FROM TESTING.maestro_signup_student_20142015 WHERE id =" . $junior_index;
                //$list2 = db_query($junior_query)->fetchAll();
                $list2 = db_select($student_table, 'st')
                    ->fields('st')
                    ->condition('id', $junior_index, '=')
                    ->execute()
                    ->fetchAll();
                // Chromephp::log($list2[0]->first_name);
                $junior_first_name = $list2[0]->first_name;
                $junior_last_name = $list2[0]->last_name;
                $junior_email = $list2[0]->email;
                $junior_gender = $list2[0]->gender;
                $junior_phone = $list2[0]->phone;
                $junior_birth = $list2[0]->birth_year;
                // senior student query...
                //$senior_query = "SELECT * FROM TESTING.maestro_signup_student_20142015 WHERE id =" . $senior_index;
                //$list3 = db_query($senior_query)->fetchAll();
                $list3 = db_select($student_table, 'st')
                    ->fields('st')
                    ->condition('id', $senior_index, '=')
                    ->execute()
                    ->fetchAll();
                // Chromephp::log($list2[0]->first_name);
                $senior_first_name = $list3[0]->first_name;
                $senior_last_name = $list3[0]->last_name;
                $senior_email = $list3[0]->email;
                $senior_gender = $list3[0]->gender;
                $senior_phone = $list3[0]->phone;
                $senior_birth = $list3[0]->birth_year;
                // mentor instance...
                $group_array_mentor = array(
                    'position' => 'Mentor',
                    'name' => $mentor_first_name,
                    'familyname' => $mentor_last_name,
                    'Email' => $mentor_email,
                    'phone' => $mentor_phone,
                    'phonealt' => 'NA',
                    'gender' => $mentor_gender,
                    'birth year' => $mentor_birth,
                    'preferences' => 'NA',
                    'colour' => 'blue',
                    'size' => 500
                );
                // junior student instance...
                $group_array_junior = array(
                    'position' => 'Junior', // for now it should be Mentee... change later..
                    'name' => $junior_first_name,
                    'familyname' => $junior_last_name,
                    'Email' => $junior_email,
                    'phone' => $junior_phone,
                    'phonealt' => 'NA',
                    'gender' => $junior_gender,
                    'birth year' => $junior_birth,
                    'preferences' => 'NA',
                    'colour' => 'blue',
                    'size' => 500
                );
                // senior student instance
                $group_array_senior = array(
                    'position' => 'Senior', // going to have to chagne this late ...
                    'name' => $senior_first_name,
                    'familyname' => $senior_last_name,
                    'Email' => $senior_email,
                    'phone' => $senior_phone,
                    'phonealt' => 'NA',
                    'gender' => $senior_gender,
                    'birth year' => $senior_birth,
                    'preferences' => 'NA',
                    'colour' => 'blue',
                    'size' => 500
                );
                // add this to children...
                $group_array_start = array(
                    'name' => 'Group' . $a,
                    'children' => array(
                        $group_array_mentor,
                        $group_array_senior,
                        $group_array_junior
                    )
                );
                array_push($final_array[children], $group_array_start);
            }
        }
        // Chromephp::log("changing the json file before rendering the page...");
        $encodedJson = json_encode($final_array);
        $file = 'TESTING.json';
        file_put_contents($file, $encodedJson);
    }
    // ---- >>> passing stuff to javascript side
    $chart = array(
        'id' => 'visualization', // might have changed id...
        'type' => 'LineGraph',
        'legend' => array(
            'Mentor',
            'Junior Student',
            'Senior Student',
        ) ,
        'weightings' => $most_recent_weightings
        // we send in the most recent weightings so we can display and send into all our
        // functions..
    );
    return d3_draw($chart);
}
/**
 * Demonstrates a force directed graph using the Graph API module.
 */
function d3_examples_forcedirected()
{
    $graph = graphapi_new_graph();
    graphapi_add_link($graph, "graphapi_relation", "relation");
    graphapi_add_link($graph, "graphapi_relation", "graphapi");
    graphapi_add_link($graph, "graphapi", "views");
    graphapi_add_link($graph, "php", "graphapi");
    graphapi_add_link($graph, "graphapi", "graph_phyz");
    graphapi_add_link($graph, "graphapi", "graphviz_filter");
    graphapi_add_link($graph, "graphapi", "thejit");
    graphapi_add_link($graph, "thejit", "thejit_spacetree");
    graphapi_add_link($graph, "thejit", "thejit_forcedirected");
    graphapi_add_link($graph, "thejit", "thejit_x");
    $options = array(
        'width' => 400,
        'height' => 400,
        'item-width' => 45,
        'engine' => 'd3',
    );
    return theme('graphapi_dispatch', array(
        'graph' => $graph,
        'config' => $options
    ));
}
/**
 * Demonstrates a column chart using the D3 API directly.
 */
function d3_examples_column()
{
    $chart = array(
        'id' => 'visualization',
        'type' => 'ColumnChart',
        'legend' => array(
            'Development',
            'QA',
            'Strategy',
            'Design',
        ) ,
        'rows' => array(
            array(
                '1st Quarter 2011',
                10,
                20,
                26,
                35
            ) ,
            array(
                '2nd Quarter 2011',
                20,
                26,
                27,
                37
            ) ,
            array(
                '3rd Quarter 2011',
                10,
                50,
                28,
                50
            ) ,
            array(
                '4th Quarter 2011',
                15,
                76,
                49,
                51
            ) ,
            array(
                '1st Quarter 2012',
                20,
                100,
                50,
                52
            ) ,
            array(
                '2nd Quarter 2012',
                4,
                1,
                110,
                40
            ) ,
        ) ,
    );
    return d3_draw($chart);
}
/**
 * Generates a random example bar graph.
 * @return string
 *   HTML for the page content.
 */
function d3_examples_bar()
{ // where is this api??
    // Temporary data until I get randomization working.
    $chart = array(
        'id' => 'visualization',
        'type' => 'BarChart',
        'legend' => array(
            'Development',
            'QA',
            'Strategy',
            'Design',
        ) ,
        'rows' => array(
            array(
                '2010 - (Data only available after 3rd quarter)'
            ) ,
            array(
                '1st Quarter 2011'
            ) ,
            array(
                '2nd Quarter 2011'
            ) ,
            array(
                '3rd Quarter 2011'
            ) ,
            array(
                '4th Quarter 2011'
            ) ,
            array(
                '1st Quarter 2012'
            ) ,
        ) ,
    );
    for ($i = 0; $i < count($chart['rows']); $i++) {
        for ($j = 0; $j < 4; $j++) {
            array_push($chart['rows'][$i], rand(1, 70) * rand(1, 70));
        }
    }
    return d3_draw($chart);
}
/**
 * Generates a random pie chart example.
 *
 * @return string
 *   HTML for the page.
 */
function d3_examples_pie()
{
    // this is going to just be another copy...
    $chart = array(
        'id' => 'visualization', // might have changed id...
        'type' => 'LineGraph',
        'legend' => array(
            'Mentor',
            'Junior Student',
            'Senior Student',
        ) ,
    );
    return d3_draw($chart);
    /*$chart = array(
    'id' => 'visualization',
    'type' => 'PieChart',
    'rows' => array(
    array('Development', 500),
    array('Strategy', 50),
    array('Design', 100),
    array('QA', 160),
    ),
    );
    return d3_draw($chart);*/
}
function printJSFunction()
{
    echo '<script type="text/javascript">function jsfunction(){
                refreshParent();   
                  function refreshParent() {

                window.opener.location.reload();
                window.close();
               }
          }</script>';
}
/*
?>

<script>

// right now this function is getting called once the submit button is pressed.
// it changes the json file

function jsfunction(){

// console.log("this function is being called when submitted");
// window.onunload = refreshParent;

refreshParent();
function refreshParent() {

// console.log("just about to refresh the parent window right now");

window.opener.location.reload();
window.close();
}
}

</script>*/